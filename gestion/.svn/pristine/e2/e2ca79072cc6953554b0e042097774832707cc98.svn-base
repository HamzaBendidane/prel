<?php

/**
 * creation_compte_entreprise_form_validate
 *
 * Validation du form
 *
 * @param unknown $form
 * @param unknown $form_state
 */
function creation_compte_entreprise_form_validate($form, &$form_state) {
  // si l'utilisateur clique sur retour
  if ($form_state['triggering_element']['#id'] == 'edit-back') {
    if ($form_state['values']['page'] == 'formulaire') {
      drupal_goto('/login');
    } else if ($form_state['values']['page'] == 'confirmation') {
      return;
    }
  }

  // Validation des formulaires
  if ($form_state['values']['page'] == 'formulaire') {
    _creation_compte_validate_entreprise($form, $form_state);
    _creation_compte_validate_responsable($form, $form_state);
    _creation_compte_validate_utilisateur($form, $form_state);
  } else if ($form_state['values']['page'] == 'confirmation') {
    // check ADEFIM : ne rien faire ?
    // _creation_compte_validate_confirmation($form, $form_state);
  } else if ($form_state['values']['page'] == 'charte') {
    _creation_compte_validate_charte($form, $form_state);
  }
}

/**
 * _creation_compte_validate_charte
 *
 * Validation des champs charte
 *
 * @param array $form
 * @param array $form_state
 */
function _creation_compte_validate_charte($form, &$form_state) {
  if (!$form_state['values']['validate']) {
    form_set_error('validate', t('Veuillez accepter la charte pour valider votre demande de création de compte'));
  }
  if (!$form_state['values']['signature']) {
    form_set_error('signature', t('Veuillez indiquer votre signature'));
  }
}


/**
 * _creation_compte_validate_entreprise
 *
 * Validation des champs entreprises
 *
 * @param array $form
 * @param array $form_state
 */
function _creation_compte_validate_entreprise(&$form, &$form_state) {
  // Validation des champs entreprises
  $nb_siret = $_POST['company']['nb_siret'];

  for ($i = 0; $i < $nb_siret; $i++) {

    // Autre siret
    if (!$_POST['company']['siret'][$i] ) {
      form_set_error('company[siret]['.$i.']', t('Le numéro de siret est obligatoire'));
    }
    if (!shared_db_entreprise_is_valid_siret_number($_POST['company']['siret'][$i])) {
      form_set_error('company[siret]['.$i.']', t('Le numéro de siret n\'est pas valide'));
    }
    if (!$_POST['company']['raison_sociale'][$i]) {
      form_set_error('company[raison_sociale]['.$i.']', t('Le champ raison sociale est obligatoire.'));
    }
    if (!$_POST['company']['code_nace'][$i]) {
      form_set_error('company[code_nace]['.$i.']', t('Le code nace est obligatoire'));
      form_set_error('company[libelle_nace]['.$i.']', t(''));
      // Afficher le cadre en erreur rouge sur le champ
//       form_set_error('company][code_]['.$i);
//       form_set_error('company][libelle_]['.$i);
    }
    if (!$_POST['company']['filiere'][$i]) {
      form_set_error('company[filiere]['.$i.']', t('La filière est obligatoire'));
    }
    if (!$_POST['company']['adresse'][$i] && !$_POST['company']['adresse'][$i]) {
      form_set_error('company[adresse]['.$i.']', t('Le champ adresse est obligatoire'));
    }  else if(!$_POST['company']['adresse'][$i]) {
      form_set_error('company[adresse]['.$i.']', t('Le champ adresse est obligatoire'));
    }
    if (!$_POST['company']['code_postal'][$i] && !$_POST['company']['ville'][$i]) {
      form_set_error('company[code_postal]['.$i.']', t('Le champ code postal / ville est obligatoire'));
      form_set_error('company[ville]['.$i.']', t(''));
    } else if(!$_POST['company']['code_postal'][$i]) {
      form_set_error('company[code_postal]['.$i.']', t('Le champ code postal / ville est obligatoire'));
    } else if(!$_POST['company']['ville'][$i]) {
      form_set_error('company[ville]['.$i.']', t('Le champ code postal / ville est obligatoire'));
    }
  }
}

/**
 * _creation_compte_validate_responsable
 *
 * Validation des champs responsable
 *
 * @param array $form
 * @param array $form_state
 */
function _creation_compte_validate_responsable($form, &$form_state) {
  // Validation des champs responsables entreprises
  if (!$form_state['values']['responsable']['responsable_titre']) {
    form_set_error('responsable[responsable_titre]', t('Le titre du responsable est obligatoire'));
  }
  if (!$form_state['values']['responsable']['responsable_nom']) {
    form_set_error('responsable[responsable_nom]', t('Le nom du responsable est obligatoire'));
  }
  if (!$form_state['values']['responsable']['responsable_prenom']) {
    form_set_error('responsable[responsable_prenom]', t('Le prénom du responsable est obligatoire'));
  }
  if (!$form_state['values']['responsable']['responsable_email']) {
    form_set_error('responsable[responsable_email]', t('Le courriel du responsable est obligatoire'));
  }
  if (!$form_state['values']['responsable']['responsable_email2']) {
    form_set_error('responsable[responsable_email2]', t('Le courriel du responsable est obligatoire'));
  }
  if(!valid_email_address($form_state['values']['responsable']['responsable_email'])){
    form_set_error('responsable[responsable_email]', t('Le format du courriel n\'est pas valide'));
  }
  if(strcmp($form_state['values']['responsable']['responsable_email'],
       $form_state['values']['responsable']['responsable_email2']) != 0 ){
    form_set_error('responsable[responsable_email2]', t('Les deux courriels du responsable ne sont pas identiques'));
  }
  if (!$form_state['values']['responsable']['responsable_fonction']) {
    form_set_error('responsable[responsable_fonction]', t('La fonction du responsable est obligatoire'));
  }
}

/**
 * _creation_compte_validate_utilisateur
 *
 * Validation des champs utilisateur
 *
 * @param array $form
 * @param array $form_state
 */
function _creation_compte_validate_utilisateur($form, &$form_state) {
  // Validation des champs responsables entreprises
  if (!$form_state['values']['utilisateur']['utilisateur_titre']) {
    form_set_error('utilisateur[utilisateur_titre]', t('Le titre de l\'utilisateur est obligatoire'));
  }
  if (!$form_state['values']['utilisateur']['utilisateur_nom']) {
    form_set_error('utilisateur[utilisateur_nom]', t('Le nom de l\'utilisateur est obligatoire'));
  }
  if (!$form_state['values']['utilisateur']['utilisateur_prenom']) {
    form_set_error('utilisateur[utilisateur_prenom]', t('Le prénom de l\'utilisateur est obligatoire'));
  }
  if (!$form_state['values']['utilisateur']['utilisateur_email']) {
    form_set_error('utilisateur[utilisateur_email]', t('Le courriel de l\'utilisateur est obligatoire'));
  }
  // Vérifier si l'email existe déjà en BDD
  if ((bool) db_select('users')
      ->fields('users', array('uid'))
      ->condition('mail', db_like($form_state['values']['utilisateur']['utilisateur_email']), 'LIKE')
      ->range(0, 1)
      ->execute()
      ->fetchField()) {
    form_set_error('utilisateur[utilisateur_email]', t('Le courriel %email est déjà utilisée',
      array('%email' => $form_state['values']['utilisateur']['utilisateur_email'])));
  }

  if(strcmp($form_state['values']['utilisateur']['utilisateur_email'],
      $form_state['values']['utilisateur']['utilisateur_email2']) != 0 ){
    form_set_error('utilisateur[utilisateur_email2]', t('Les deux courriels de l\'utilisateur ne sont pas identiques'));
  }
  if (!$form_state['values']['utilisateur']['utilisateur_email2']) {
    form_set_error('utilisateur[utilisateur_email2]', t('Le courriel de l\'utilisateur est obligatoire'));
  }
  if(!valid_email_address($form_state['values']['utilisateur']['utilisateur_email'])){
    form_set_error('utilisateur[utilisateur_email]', t('Le format du courriel n\'est pas valide'));
  }

  if (!$form_state['values']['utilisateur']['utilisateur_password']) {
    form_set_error('utilisateur[utilisateur_password]', t('Le mot de passe de l\'utilisateur est obligatoire'));
  }

  if (!preg_match('^\S*(?=\S{8,})(?=\S*[\W])(?=\S*[a-z])(?=\S*[A-Z])(?=\S*[\d])\S*^',
      $form_state['values']['utilisateur']['utilisateur_password'])) {
        form_set_error('utilisateur[utilisateur_password]', t('Votre mot de passe n\'est pas conforme, il faut qu\'il soit composé de 8 caractères minimum
        dont au moins une lettre majuscule, une lettre miniscule, un chiffre et un caractère spécial'));
  }

  if (!$form_state['values']['utilisateur']['utilisateur_fonction']) {
    form_set_error('utilisateur[utilisateur_fonction]', t('La fonction de l\'utilisateur est obligatoire'));
  }
  if (!$form_state['values']['utilisateur']['utilisateur_telephone']) {
    form_set_error('utilisateur[utilisateur_telephone]', t('Le téléphone de l\'utilisateur est obligatoire'));
  }
  $user_habilitations = $form_state['values']['utilisateur']['utilisateur_fonctions'];
  $error = true;
  if ($user_habilitations) {
    foreach ($user_habilitations as $key => $value) {
      if ($value !== 0) {
        $error = false;
        break;
      }
    }
  }
  if ($error) {
    form_set_error('utilisateur[utilisateur_fonctions]', t('Pour pouvoir créer un compte, vous devez sélectionner au moins une
        fonctionnalité.'));
  }
}