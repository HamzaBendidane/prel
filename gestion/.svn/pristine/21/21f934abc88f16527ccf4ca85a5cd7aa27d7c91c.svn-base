<?php

function _dgf_suivi_demande_list_require_once() {
  require_once 'suivi_demande_langs.inc';
  require_once 'suivi_demande_db.inc';
//   require_once 'suivi_demande_export.inc';
  require_once 'suivi_demande_form.inc';
  require_once 'suivi_demande_submit.inc';
}

function _dgf_contrat_pro_stagiaire_include_js_css() {
  drupal_add_js(drupal_get_path('module', 'dgf_suivi' ) . '/inc/demande/js/suivi_demande.js' );
  drupal_add_css(drupal_get_path('module', 'dgf_suivi' ) . '/inc/demande/css/suivi_demande.css' );
}

function dgf_suivi_demande_list_page() {
  // Appel des fonctions chargeant les autres fichiers.
  _dgf_suivi_demande_list_require_once();
  _dgf_contrat_pro_stagiaire_include_js_css();

  // si appel depuis le dashboard : toper comme lu les notifications appartement au configuration recu
  if(isset($_GET['ncat'])) {
    if (is_array($_GET['ncat'])){
      global $user;
      $user_extranet = shared_get_drupal_user_id($user->uid);
      shared_db_set_lu_notif_categories_config($_GET['ncat'], $user_extranet);
    }
  }

  $suivi_demande_list_form = drupal_get_form('dgf_suivi_demande_list_filter_form');

  // Liste des colonnes du tableau affiché
  $header = array(
      'Date de saisie',
      'N° action',
      'Etablissement ',
      'Nature de l’action',
      'Intituléde l’action',
      'Durée totale',
      'Dates de formation',
      'Prestataire ou organisme de formation',
      'Participants',
      'Coût €',
      'P. direct',
      'Etat',
      'Action',
  );

  // On récupère les données saisies dans le form de filtre
  $post_data = isset($_SESSION['suivi_demande_filter']) ? $_SESSION['suivi_demande_filter'] : null;

  // On génère le tableau des données en fonction des critères de recherche
  $rows = suivi_demande_get_demandes($post_data);

  // Construction de la "page" cad -> du tableau comportant l'ensemble (form, colonnes, lignes)
  $variables =  array(
      'suivi_demande_list_form' => $suivi_demande_list_form,
      'header' => $header,
      'rows' => $rows,
  );

  $row = count($rows);
 // $totalRows = count(getAllDemande($post_data));
  // On l'envoie au theme pour affichage de la page
  $output = theme('dgf_suivi_demande_liste_page_theme', $variables);
 // $output.="<div class ='totalDisplay'>Nombre de demandes : $row sur $totalRows </div>";

  return $output;
}

/**
 * Gère la duplication d'une demande
 */
function dgf_demande_duplicate() {
  // On rappelle ici suivi_demande_db.inc car cette fonction est appelée par un service
  // extérieur au reste du controller
  require_once 'suivi_demande_db.inc';
  $id_dgf = arg(2);
  $type_contrat = get_type_contrat($id_dgf);

  $step_dgf = array(
      'dgf',
      'lien_dgf_ref_esclave_entreprise',
      'temp_dgf_form_demande',
      'temp_dgf_form_salarie',
      'temp_dgf_form_contrat',
      'temp_dgf_form_formation',
      'temp_dgf_form_organisme_formation',
      'temp_dgf_form_tuteur',
     // 'temp_dgf_form_justificatif',
  );

  $new_id_dgf = null;

  foreach ($step_dgf as $table) {
    // On récupère les données de l'action
    $datas_from_dgf = get_data_demande_by_id_dgf($id_dgf, $table);

    // On récupère l'id de la formation pour la table temp_dgf_form_formation_repartition
    $temp_formation_row_id = $datas_from_dgf['id'];

    // On filtre ces données (suppr de stagiaire et de tuteur si contrat-pro)
    if ($datas_from_dgf != null) {
      $datas_new_dgf = filter_data_new_dgf($table, $datas_from_dgf, $type_contrat, $new_id_dgf);
      // Puis on les insert dans la base de données avec un nouveau id_dgf
      // Si on est dans la table dgf on récupère l'ID_DGF
      if ($table == 'dgf'){
        $new_id_dgf = insert_duplicated_dgf_datas($table, $datas_new_dgf);
      } else if (can_insert_data($table, $type_contrat)) {
        // Sinon et si on est en dehors des tables temp_form_salarie et temp_form_tuteur
        // On insère les nouvelles valleurs dans les tables correspondantes
        $temp_table_innsert_id = insert_duplicated_dgf_datas($table, $datas_new_dgf);
        if ($table == 'temp_dgf_form_formation') {
          // Si on est dans la table formation, on applique un traitement spécial pour
          // les répartitions liées aux formations
          trigger_formation_repartition($temp_formation_row_id, $temp_table_innsert_id, $new_id_dgf);
        }
      } else {
        // Si on est dans les cas restants (table salarie et tuteur)
        // on insère des lignes vides avec juste l'id_dgf et les données relatives à l'user courant
        prepare_empty_datas_with_id_dgf($table, $new_id_dgf);
      }
    }
  }
  // On met la valeur du nouvel id dans la colonne numero_demande de la table dgf
  set_dgf_num_demande($new_id_dgf);
  // Enfin on redirige l'utilsateur vers le formulaire des dgf correspondant
  if ($type_contrat == 1) {
    drupal_set_message('Toutes les données de la demande sont dupliquées hormis les données relatives au stagiaire et au tuteur');
    drupal_goto('/dgf/demande/contrat-pro/stagiaire/'.$new_id_dgf);
  } else {
    drupal_set_message('Toutes les données de la demande sont dupliquées hormis les données relatives au stagiaire');
    drupal_goto('/dashboard');
  }
}
/**
 * Gère l'insertion d'un nouvel id dans la table temp_dgf_form_formation_repartition
 *
 * @param int $id_form_formation
 * @param int $new_id_form_formation
 */
function trigger_formation_repartition($id_form_formation, $new_id_form_formation, $new_id_dgf) {
  $datas = get_data_demande_by_id($id_form_formation,'temp_dgf_form_formation_repartition','id_dgf_form_formation');
  if (is_array($datas)){
    foreach ($datas as $data){
      unset ($data['id']);
      $data['id_dgf_form_formation'] = $new_id_form_formation;
      insert_duplicated_dgf_datas('temp_dgf_form_formation_repartition',$data);
    }
  }
}
/**
 * Vérifie si possible de modifier les données selon la table et le type de demande
 *
 * @param string $table
 * @param int $type_contrat
 * @return boolean
 */
function can_insert_data($table, $type_contrat) {
  $result = true;
  if (($table == "temp_dgf_form_salarie") || ($table == "temp_dgf_form_tuteur" && $type_contrat == 1)) {
    $result = false;
  }
  return $result;
}

/**
 * Supprime les données non désirées des tables
 *
 * @param string $table
 * @param array $datas
 * @param int $type_contrat
 *
 * @return array $datas
 */
function filter_data_new_dgf($table, $datas, $type_contrat, $new_id_dgf) {
  switch ($table) {
    case 'temp_dgf_form_salarie':
     // $datas = delete_dgf_datas($datas, $table);
      $datas =  update_data_user($datas, $table, $new_id_dgf);
      break;
    case 'temp_dgf_form_tuteur':
      // Si on est dans la table tuteur et dans le cas d'un contrat-pro
      // on efface les données comme pour stagiaire
      if ($type_contrat == 1){
      // $datas = delete_dgf_datas($datas, $table);
      }
      $datas = update_data_user($datas, $table, $new_id_dgf);
      break;
      case 'temp_dgf_form_demande':
        $datas = unset_dgf_datas($datas, $new_id_dgf);
        break;
      case 'temp_dgf_form_formation_repartition':
        $datas = unset_dgf_datas($datas, $new_id_dgf);
        $datas['id_dgf_nature_demande'] = $type_contrat;
        break;
      default :
        $datas = update_data_user($datas, $table, $new_id_dgf);
        break;
  }
  return $datas;
}

/**
 *
 * @param array $datas
 * @param string $table
 * @param int $new_id_dgf
 * @return array $datas
 */
function update_data_user($datas, $table, $new_id_dgf) {
  global $user;

  unset($datas['id']);

  if ($table != 'dgf') {
    $datas['id_dgf'] = $new_id_dgf;
  } else {
    // On est dans la table DGF
    // alors on remet l'étape demande au niveau stagiaire qui est à remplir
    $datas['etape_demande'] = 2;
    $datas['numero_demande'] = $new_id_dgf;
    $datas['date_synthese'] = shared_send_to_mssql_date(null, 'datetime');
  }

  $datas['date_creation'] = shared_send_to_mssql_date(null, 'datetime');

  $datas['id_user_creation'] = $user->uid;
  $datas['date_last_edit'] = null;
  $datas['id_user_last_edit'] = null;
  $datas['date_delete'] = null;
  $datas['id_user_delete'] = null;
  $datas['is_delete'] = 0;
  return  $datas;
}

/**
 *
 * @param array $datas
 * @param int $new_id_dgf
 * @return array $datas
 */
function unset_dgf_datas($datas, $new_id_dgf){
  $datas['id_dgf'] = $new_id_dgf;
  unset($datas['id']);
  unset($datas['date_creation']);
  unset($datas['id_user_creation']);
  unset($datas['date_last_edit']);
  unset($datas['id_user_last_edit']);
  unset($datas['date_delete']);
  unset($datas['id_user_delete']);

  return $datas;
}

/**
 *
 * @param array $datas
 * @param unknown $table
 * @return array $datas
 */
function delete_dgf_datas($datas, $table) {
 foreach ($datas as $key => $value) {
   $datas[$key] = null;
 }
  return $datas;
}

/**
 * Afficher le nombre de résultat par page sur le nombre de résultat total
**/
  
function display_number_of_total_result () {
  _dgf_suivi_demande_list_require_once();
  _dgf_contrat_pro_stagiaire_include_js_css();
  $suivi_demande_list_form = drupal_get_form('dgf_suivi_demande_list_filter_form');
  $post_data = isset($_SESSION['suivi_demande_filter']) ? $_SESSION['suivi_demande_filter'] : null;
  $rows = count(suivi_demande_get_demandes($post_data));
  $totalRows = count(getAllDemande($post_data));

}