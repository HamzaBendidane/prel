<?php

function _dgf_contrat_pro_tuteur_require_once_files() {
  require_once 'tuteur_db.inc';
  require_once 'tuteur_langs.inc';
  require_once 'tuteur_submit.inc';
  require_once 'tuteur_validate.inc';
  require_once drupal_get_path('module', 'dgf_contrat_pro' ) . '/inc/stagiaire/stagiaire_db.inc';
}

function _dgf_contrat_pro_tuteur_include_js_css() {
  drupal_add_js(drupal_get_path('module', 'dgf_contrat_pro' ) . '/inc/tuteur/js/tuteur.js' );
  drupal_add_css(drupal_get_path('module', 'dgf_contrat_pro' ) . '/inc/tuteur/css/tuteur.css' );
}

function dgf_contrat_pro_tuteur_form($form, &$form_state) {
  _dgf_contrat_pro_tuteur_require_once_files();
  _dgf_contrat_pro_tuteur_include_js_css();

  $temp_dgf_form_tuteur = array();
  $salarie = array();
  // s'il est rempli, on récupère les informations de la bdd
    $id_dgf = shared_security_access_user(4, 'DGF');
    save_step_url($id_dgf, 6);
    $temp_dgf_form_tuteur = tuteur_db_get_temp_dgf_form_tuteur($id_dgf);
    $salarie = tuteur_db_get_v_salarie($temp_dgf_form_tuteur['id_ref_esclave_salarie']);
    $temp_dgf_form_salarie = salarie_db_get_temp_dgf_form_salarie($id_dgf);

  shared_get_referentiel_data(array('ref_diplome'));
//   $entreprises = shared_db_functions_get_ref_esclave_entreprise();

  $form['cerfa-step'] = array(
      '#type' => 'hidden',
      '#default_value' => '/'.drupal_get_path('theme', 'opcaim').'/images/cerfa-6.png',
  );

  $form['id_dgf'] = array(
      '#type' => 'hidden',
      '#default_value' => shared_isset_trim(@$id_dgf),
      '#title' => t('Id demande' )
  );

  $form['id_dgf_tuteur'] = array(
      '#type' => 'hidden',
      '#default_value' => $temp_dgf_form_tuteur ? $temp_dgf_form_tuteur['id'] : null,
      '#title' => t('Id demande' )
  );

  $default_value_etablishment = null;
  if ($temp_dgf_form_tuteur) {
    $default_value_etablishment = trim($temp_dgf_form_tuteur['id_ref_esclave_entreprise']);
  } else if ($temp_dgf_form_salarie) {
    $default_value_etablishment = trim($temp_dgf_form_salarie['id_ref_esclave_entreprise']);
  }
  
  if (has_role_admin()) {
      // Si Admin ou Admin/Super Admin OPCAIM
      $raison_social = '';
      if (!is_null($default_value_etablishment)) {
          $raison_social = shared_get_raison_sociale_siret_entreprise($default_value_etablishment);
      }
  
      $form['tout_etablissement'] = array(
              '#type' => 'textfield',
              '#title' => t('Etablissement'),
              '#attributes' => array(
                      'placeholder' => t('SIRET ou raison sociale'),
                      'class' => array('autocomplete-siret')),
              '#default_value' => $raison_social,
              '#field_suffix' => '<img src='.base_path() . path_to_theme() . '/' . 'images/search.png'.' />
                <span class="spinner">&nbsp;</span>',
      );
  
      $form['etablishment'] = array(
              '#type' => 'hidden',
              '#default_value' => $default_value_etablishment,
      );
  
  } else {
  
      // Listes des entreprises
      $entreprises = shared_db_functions_get_ref_esclave_entreprise();
  
      if (empty($entreprises)) {
          drupal_set_message('Attention, il n\'y a aucun établissement pour votre compte utilisateur. Vous ne pouvez faire
      une demande.', 'error');
      } else {
          $form['etablishment'] = array(
                  '#type' => 'select',
                  '#title' => t('Etablissement'),
                  '#options' => $entreprises,
                  '#default_value' => $default_value_etablishment,
          );
      }
  }

//   if (empty($entreprises)) {
//     drupal_set_message('Attention, il n\'y a aucun établissement pour votre compte utilisateur. Vous ne pouvez faire
//       une demande.', 'error');
//   } else {
//     $form['etablishment'] = array(
//         '#type' => 'select',
//         '#title' => t('Etablissement' ),
//         '#default_value' => $default_value_etablishment,
//         '#options' => $entreprises,
//     );
//   }

  $form['id_salarie'] = array(
      '#type' => 'hidden',
      '#default_value' => ($temp_dgf_form_tuteur) ? trim($temp_dgf_form_tuteur['id_ref_esclave_salarie']) : null,
      '#title' => t('Id salarie' )
  );

  $form['modal'] = array(
      '#type' => 'hidden',
      '#default_value' => isset($_GET['modal']) ? $_GET['modal'] : '',
      '#title' => t('Modal à afficher' )
  );

  $form['lastname'] = array(
      '#element_validate' => array('element_shared_nom_validate', 'element_shared_not_empty_validate'),
      '#type' => 'textfield',
      '#title' => t('Nom' ),
      '#default_value' => $salarie ? trim($salarie['nom']) : null,
      '#field_suffix' => '<img src='.base_path() . path_to_theme() . '/' . 'images/search.png'.' />
        <span class="spinner">&nbsp;</span>',
  );

  $form['firstname'] = array(
      '#element_validate' => array('element_shared_nom_validate', 'element_shared_not_empty_validate'),
      '#type' => 'textfield',
      '#default_value' => $salarie ? trim($salarie['prenom']) : null,
      '#title' => t('Prénom' ),
  );

  $form['telephone'] = array(
      '#type' => 'textfield',
      '#title' => t('Téléphone' ),
      '#default_value' => $temp_dgf_form_tuteur ? $temp_dgf_form_tuteur['telephone'] : null,
  );
  $form['email'] = array(
      '#type' => 'textfield',
      '#title' => t('Email' ),
      '#default_value' => $temp_dgf_form_tuteur ? $temp_dgf_form_tuteur['email'] : null,
  );

  $datepicker_icon = '<span class="glyphicon glyphicon-calendar add-on"></span>';
  
  $form['birthday'] = array(
      '#title' => t('Date de naissance' ),
      '#type' => 'textfield',
      '#field_suffix' => $datepicker_icon,
	  '#element_validate' => array('element_shared_date_validate'),
      '#default_value' => $salarie ? date_format(date_create($salarie['date_de_naissance']), 'd/m/Y') : null,
      '#attributes' => array('class' => array('datePicker'),"autocomplete"=>"off", 'placeholder' => t('jj/mm/aaaa') )
  );

  $form['nb_salarie'] = array(
      '#type' => 'textfield',    
      '#title' => t('Nombre de salariés encadrés par ce tuteur' ),
      '#default_value' => $temp_dgf_form_tuteur ? $temp_dgf_form_tuteur['nb_salarie_encadre'] : null,
  );

  $form['emploi_occupe'] = array(
      '#type' => 'textfield',
      '#title' => t('Emploi occupé' ),
      '#default_value' => $temp_dgf_form_tuteur ? $temp_dgf_form_tuteur['emploi'] : null,
  );

  $form['dernier_diplome'] = array(
      '#type' => 'select',
      '#title' => t('Dernier diplome obtenu' ),
      '#options' => $_SESSION['referentiel_extranet_datas']['ref_diplome'],
      '#default_value' => $temp_dgf_form_tuteur ? $temp_dgf_form_tuteur['id_ref_diplome'] : null,
  );

  // Ajout des boutons d'actions
  $validatorsBoutonNext = array(
      'dgf_contrat_pro_tuteur_specific_form_validate',
      'dgf_contrat_pro_tuteur_standard_form_validate',
  );
  $submitsBoutonNext = array('dgf_contrat_pro_tuteur_form_submit');
  dgf_boutons_action_form($form, $validatorsBoutonNext, $submitsBoutonNext);

  // Ajout de la modal quitter
  $validatorsQuit = array('dgf_contrat_pro_tuteur_form_validate');
  $validatorsSave = array(
//       'dgf_contrat_pro_tuteur_standard_form_validate',
//       'dgf_contrat_pro_tuteur_specific_form_validate'
  );
  $submitsSave = array('dgf_contrat_pro_tuteur_form_submit');
  dgf_modal_quit_form($form, $validatorsQuit, $validatorsSave, $submitsSave);

  _dgf_contrat_pro_tuteur_attestation_form($form, $temp_dgf_form_tuteur);

  _dgf_contrat_pro_tuteur_message_info_finale_form($form, $temp_dgf_form_tuteur);

  return $form;
}

function _dgf_contrat_pro_tuteur_attestation_form(&$form, $temp_dgf_form_tuteur) {
  //modal attestation

  $form['modal_attestation']['beneficier'] = array(
      '#type' => 'radios',
      '#title' => t('Le tuteur : ' ),
      '#options' => array(
          0 => t('va bénéficier d’une formation' ),
          1 => t('a déjà bénéficié d’une formation' )
      ),
      '#default_value' => $temp_dgf_form_tuteur && $temp_dgf_form_tuteur['certif_role_tuteur'] && $temp_dgf_form_tuteur['certif_deux_ans_exp'] ? $temp_dgf_form_tuteur['formation_tuteur'] : NULL,

  );
  
  $datepicker_icon = '<span class="glyphicon glyphicon-calendar add-on"></span>';
  
  $form ['modal_attestation']['date_formation'] = array(
      '#title' => t('Date de formation' ),
      '#type' => 'textfield',
      '#field_suffix' => $datepicker_icon,
      '#default_value' => $temp_dgf_form_tuteur ?
        date_format(date_create($temp_dgf_form_tuteur['date_formation']), 'd/m/Y') : null,
      '#attributes' => array('class' => array('datePicker'),"autocomplete"=>"off" ),
  );

  $form ['modal_attestation']['duree_formation'] = array(
      '#title' => t('Durée de formation' ),
      '#default_value' => $temp_dgf_form_tuteur ? $temp_dgf_form_tuteur['duree_formation'] : null,
      '#type' => 'textfield',
  );

  $form ['modal_attestation']['nom_organisme'] = array(
      '#type' => 'textfield',
      '#title' => t('Nom de l\'organisme ' ),
      '#default_value' => $temp_dgf_form_tuteur ? $temp_dgf_form_tuteur['nom_organisme'] : null,
  );

  $checkbox_default_value = array();
  if ($temp_dgf_form_tuteur) {
    if ($temp_dgf_form_tuteur['certif_role_tuteur'] && $temp_dgf_form_tuteur['certif_deux_ans_exp']) {
      $checkbox_default_value = array('A été informé sur son rôle de tuteur', 'Bénéficie de plus de 2 ans d\'ancienneté');
    } else if ($temp_dgf_form_tuteur['certif_role_tuteur']) {
      $checkbox_default_value = array('A été informé sur son rôle de tuteur');
    } else if ($temp_dgf_form_tuteur['certif_deux_ans_exp']) {
      $checkbox_default_value = array('Bénéficie de plus de 2 ans d\'ancienneté');
    }
  }
  
  $certifierTooltip = '<a id="va_beneficier_info" class="glyphicon glyphicon-question-sign" data-toggle="tooltip" data-original-title="' . @MSG_ERR_DGF_CP65 . '"></a>';

  $form ['modal_attestation']['certifier'] = array(
      '#type' => 'checkboxes',
      '#title' => t('Vous certifiez que le tuteur: ' . $certifierTooltip ),
      '#options' => drupal_map_assoc(array(
          t('A été informé sur son rôle de tuteur' ),
          t('Bénéficie de plus de 2 ans d\'ancienneté' ),
      )),
      '#default_value' => $checkbox_default_value
  );
  
  $form ['modal_attestation']['modal_annuler'] = array(
      '#type' => 'submit',
      '#value' => t('Annuler'),
      '#attributes' => array('class' => array('btn btn-danger modalQuit'),),
      '#validate' => array('dgf_contrat_pro_tuteur_form_validate'),
  );

  $form ['modal_attestation']['modal_save_attestation'] = array(
      '#type' => 'submit',
      '#value' => t('Sauvegarder'),
      '#attributes' => array('class' => array('btn btn-primary modalSave'),),
      '#validate' => array(
          'dgf_contrat_pro_tuteur_specific_form_validate',
          'dgf_contrat_pro_tuteur_standard_form_validate',
          'dgf_contrat_pro_tuteur_attestation_form_validate',
      ),
      '#submit' => array('dgf_contrat_pro_tuteur_attestation_form_submit',),
  );

}

function _dgf_contrat_pro_tuteur_message_info_finale_form(&$form, $temp_dgf_form_tuteur) {
  // Gestion de l'afichage en modal

  $form['modal_info_final']['text'] = array (
      '#type' => 'fieldset',
      '#title' => '',
  );

  $form['modal_info_final']['text']['lines'] = array(
      '#type' => 'markup',
      '#markup' => @MSG_MESSAGE_INFORMATION_FINAL,
  );

  $form['modal_info_final']['goto-cerfa'] = array (
      '#type' => 'submit',
      '#value' => @MSG_MESSAGE_INFORMATION_FINAL_BUTTON,
      '#submit' => array ('dgf_contrat_pro_tuteur_message_info_finale_form_submit'),
      '#attributes' => array(
          'class' => array('btn btn-primary modalSuivant'),
      ),
  );
}