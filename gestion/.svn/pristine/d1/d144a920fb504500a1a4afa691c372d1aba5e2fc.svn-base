<?php

/**
 *   Validation des champs utilisateurs
 *   @param: $form , &$form_state
 *
 */
function administration_utilisateurs_common_form_validate($form, &$form_state) {
      // si l'utilisateur clique sur retour
  if ($form_state['triggering_element']['#id'] == 'edit-back') {
    if(arg(0) === 'mon-compte') {
      drupal_goto('/dashboard');
    } else {
      drupal_goto('/opcaim-admin/utilisateurs');
    }
    return;
  }

  if ($form_state['triggering_element']['#id'] == 'edit-bloquer') {
    drupal_goto('/opcaim-admin/utilisateurs/bloquer/'.arg(3));
  } else if ($form_state['triggering_element']['#id'] == 'edit-refuser') {
    return;
  } else {
    // Validation des champs
    $civilite = $form_state['values']['utilisateur_titre'];
    $user_name = $form_state['values']['utilisateur_nom'];
    $user_surname = $form_state['values']['utilisateur_prenom'];
    $user_email = $form_state['values']['utilisateur_email'];
    $user_fonction = $form_state['values']['utilisateur_fonction'];
    $user_phone = $form_state['values']['utilisateur_telephone'];
    $user_habilitations = $form_state['values']['utilisateur_habilitations'];

    if (empty($civilite)){
      form_set_error('utilisateur_titre', t('Le champ civilité est obligatoire'));
    }
    if (empty($user_name)){
      form_set_error('utilisateur_nom', t('Le champ nom est obligatoire'));
    }
    if (empty($user_surname)){
      form_set_error('utilisateur_prenom', t('Le champ prénom est obligatoire'));
    }
    if (empty($user_email)) {
      form_set_error('utilisateur_email', t('Le champ email est obligatoire'));
    }
    if (user_validate_mail($user_email)) {
      form_set_error('utilisateur_email', t('Le champ email n\'est pas conforme'));
    }
    if (empty($user_fonction)) {
      form_set_error('utilisateur_fonction', t('Le champ fonction  est obligatoire'));
    }
    if (empty($user_phone)){
      form_set_error('utilisateur_telephone', t('Le champ téléphone est obligatoire'));
    }

    $error = true;
    if ($user_habilitations) {
      foreach ($user_habilitations as $key => $value) {
        if ($value !== 0) {
          $error = false;
          break;
        }
      }
    }
    if ($error){
      form_set_error('utilisateur_habilitations', t('Un droit au moins doit être sélectionné.'));
    }
    // Si on est en création, on doit vérifier que l'email n'est pas déjà utilisé lors de la création de compte
    if ($form_state['triggering_element']['#id'] == 'edit-ajouter') {
      // check email exist
      if ((bool) db_select('users')
          ->fields('users', array('uid'))
          ->condition('mail', db_like($user_email), 'LIKE')
          ->range(0, 1)
          ->execute()
          ->fetchField()) {
            form_set_error('utilisateur_email', t('L\'adresse email %email est déjà utilisée', array('%email' => $user_email)));
      }
    }

    if (arg(0) === 'mon-compte') {
      $password = $form_state['values']['utilisateur_password'];
      if ($password != '' && !preg_match('^\S*(?=\S{8,})(?=\S*[\W])(?=\S*[a-z])(?=\S*[A-Z])(?=\S*[\d])\S*^',
          $password)) {
            form_set_error('utilisateur_password[pass1]', t('Votre mot de passe n\'est pas conforme, il faut qu\'il soit composé de 8 caractères minimum
        dont au moins une lettre majuscule, une lettre miniscule, un chiffre et un caractère spécial'));
      }
    }
  }
}